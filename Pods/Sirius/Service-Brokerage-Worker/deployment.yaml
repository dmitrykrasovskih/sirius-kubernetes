apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Brokerage
  labels:
    app: brokerage-worker
    environment: Development
    tier: Service
  name: brokerage-worker
  namespace: sirius
spec:
  revisionHistoryLimit: 1
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  replicas: 1
  selector:
    matchLabels:
      app: brokerage-worker
  template:
    metadata:
      labels:
        app: brokerage-worker
      name: brokerage-worker
    spec:
      containers:
      - name: brokerage-worker
        image: docker.io/swisschains/sirius-brokerage-worker:1.0.11
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
             command:
             - /bin/sh
             - -c 
             - "/bin/echo 'options single-request-reopen' >> /etc/resolv.conf"
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /api/isalive
            port: 5000
          initialDelaySeconds: 40
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/isalive
            port: 5000
          initialDelaySeconds: 40
          periodSeconds: 20
        resources:
          requests:
            memory: 128Mi 
            cpu: 140m 
          limits:
            memory: 786Mi 
            cpu: 1000m 
        env:
        - name: RemoteSettingsRequired
          value: "true"
        - name: RemoteSettingsUrls__0 
          value: "http://settings.sirius.svc.cluster.local/common"
        - name: RemoteSettingsUrls__1 
          value: "http://settings.sirius.svc.cluster.local/sirius/common"
        - name: RemoteSettingsUrls__2
          value: "http://settings.sirius.svc.cluster.local/sirius/brokerage"
        - name: RemoteSettingsReadTimeout
          value: 00:00:10
      tolerations:
       - effect: NoSchedule
         operator: Exists
      nodeSelector:
          agentpool: sirius
